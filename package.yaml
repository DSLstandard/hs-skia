name: skia
author: DSLstandard
maintainer: qgeneral35@gmail.com
version: 0.0.1
license-file: LICENSE
synopsis: Bindings to Google's Skia library through the C API of https://github.com/mono/skia

default-extensions:
  - AllowAmbiguousTypes
  - Arrows
  - BinaryLiterals
  - BlockArguments
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveAnyClass
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DerivingStrategies
  - DerivingVia
  - DuplicateRecordFields
  - EmptyCase
  - ExplicitForAll
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - ImportQualifiedPost
  - LambdaCase
  - LiberalTypeSynonyms
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - OverloadedLabels
  - OverloadedRecordDot
  - OverloadedStrings
  - PartialTypeSignatures
  - PatternSynonyms
  - QuasiQuotes
  - RankNTypes
  - RecordWildCards
  - RecursiveDo
  - ScopedTypeVariables
  - StandaloneDeriving
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeOperators
  - UndecidableInstances
  - ViewPatterns
ghc-options: -Wall -Wno-name-shadowing -Wno-orphans

# DEVELOPER NOTE: Link to a tutorial on using cabal flags to enable/disable
# assertions: https://guide.aelve.com/haskell/cpp-vww0qd72.html#item-oh9ytz0p
flags:
  enable-skia-assertions:
    description: >
      Enable Haskell IO assertions on the outputs of certain functions in the
      C++ Skia library. To elaborate, some Skia functions guarantee specific
      postconditions, and this Haskell binding library typically assumes that
      these postconditions are never violated and exploits this assumption to
      perform fast operations, which can fail spectacularly if the
      postconditions are in fact untrue. Enabling this flag adds simple
      assertion tests for the postconditions and raises a @SkiaAssertionError@
      if any violations are detected. These assertion tests should have very
      little runtime cost, thus it is recommended to leave this flag on.
    default: true
    manual: true

extra-source-files:
  - fake_skia_headers/**/*

library:
  ghc-options:
    # See https://github.com/tfausak/imp?tab=readme-ov-file#recommended-usage
    -fplugin=Imp
    -fplugin-opt=Imp:--alias=_:ThisModule
  dependencies:
    - base
    - bcp47
    - bytestring
    - containers
    - haskell-src-exts
    - haskell-src-meta
    - imp ^>= 1.0.0.0 # About 'imp', see https://taylor.fausak.me/2024/03/31/alias-current-module/
    - inline-c
    - inline-c-cpp
    - linear
    - managed
    - neat-interpolation
    - resourcet
    - template-haskell
    - text
    - time
    - vector
  source-dirs: src/
  pkg-config-dependencies:
    # The pkg-config pf 'skia' tells Cabal the library path of Skia and also has
    # the -lskia flag, but it does not link the other Skia libraries like
    # 'skottie', 'skparagraph', etc.
    - skia
  when:
    - condition: flag(enable-skia-assertions)
      cpp-options: -DHS_SKIA_SKIA_ASSERTIONS_ENABLED
    

  include-dirs:
    # Some Skia headers include hidden headers... so we are copying those hidden headers here.
    - fake_skia_headers
  extra-libraries:
    # Required for C++ code to avoid undefined reference errors
    - stdc++

    # Skia shared libraries to link.
    #
    # Built executables depending on hs-skia will automatically link to the necessary
    # Skia shared libraries listed here. See cbits_cmake/CMakeLists.txt to learn
    # what to link.
    - skia
    - skottie
    - skparagraph
    - sksg
    - skshaper
    - skunicode_core
    - skunicode_icu # TODO: Add other SkUnicode backends too, or create a package flag for each Skia SKUnicode backend.
    - svg

executables:
  demo-raster-example:
    source-dirs: demos/
    main: DemoRasterExample.hs
    other-modules: []
    dependencies:
      - base
      - linear
      - resourcet
      - skia

  demo-glfw-opengl:
    source-dirs: demos/
    main: DemoGLFWOpenGL.hs
    other-modules: []
    dependencies:
      - GLFW-b
      - OpenGLRaw
      - base
      - linear
      - resourcet
      - skia
      - text

  demo-sdl2-opengl:
    source-dirs: demos/
    main: DemoSDL2OpenGL.hs
    other-modules: []
    dependencies:
      - OpenGLRaw
      - base
      - linear
      - resourcet
      - sdl2
      - skia
      - text

  demo-skparagraph:
    source-dirs: demos/
    main: DemoSKParagraph.hs
    other-modules: [SharedUtils.MakeDemoApp]
    dependencies:
      - GLFW-b
      - OpenGLRaw
      - base
      - linear
      - neat-interpolation
      - resourcet
      - skia
      - text

  demo-list-skunicode-backends:
    source-dirs: demos/
    main: DemoListSKUnicodeBackends.hs
    other-modules: []
    dependencies:
      - base
      - resourcet
      - skia

  demo-skottie-animation-viewer:
    source-dirs: demos/
    main: DemoSkottieAnimationViewer.hs
    other-modules: [SharedUtils.MakeDemoApp]
    dependencies:
      - base
      - GLFW-b
      - OpenGLRaw
      - skia
      - time
      - optparse-applicative
      - linear
      - text
      - resourcet
      - directory