name: skia
author: DSLstandard
maintainer: qgeneral35@gmail.com
version: 0.0.1
license-file: LICENSE
synopsis: Bindings to Google's Skia library through the C API of https://github.com/mono/skia

default-extensions:
  - AllowAmbiguousTypes
  - Arrows
  - BinaryLiterals
  - BlockArguments
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveAnyClass
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DerivingStrategies
  - DerivingVia
  - DuplicateRecordFields
  - EmptyCase
  - ExplicitForAll
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - ImportQualifiedPost
  - LambdaCase
  - LiberalTypeSynonyms
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - OverloadedLabels
  - OverloadedRecordDot
  - OverloadedStrings
  - PartialTypeSignatures
  - PatternSynonyms
  - QuasiQuotes
  - RankNTypes
  - RecordWildCards
  - RecursiveDo
  - ScopedTypeVariables
  - StandaloneDeriving
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeOperators
  - UndecidableInstances
  - ViewPatterns
ghc-options: -Wall -Wno-name-shadowing -Wno-orphans

# DEVELOPER NOTE: Link to a tutorial on using cabal flags to enable/disable
# assertions: https://guide.aelve.com/haskell/cpp-vww0qd72.html#item-oh9ytz0p
flags:
  enable-skia-assertions:
    description: >
      Enable Haskell IO assertions on the outputs of certain functions in the
      C++ Skia library. To elaborate, some Skia functions guarantee specific
      postconditions, and this Haskell binding library typically assumes that
      these postconditions are never violated and exploits this assumption to
      perform fast operations, which can fail spectacularly if the
      postconditions are in fact untrue. Enabling this flag adds simple
      assertion tests for the postconditions and raises a @SkiaAssertionError@
      if any violations are detected. These assertion tests should have very
      little runtime cost, thus it is recommended to leave this flag on.
    default: true
    manual: true

library:
  source-dirs: src/
  build-tools: hsc2hs
  dependencies:
    - base
    - bytestring
    - haskell-src-exts
    - haskell-src-meta
    - inline-c
    - linear
    - mtl
    - neat-interpolation
    - storable-offset
    - template-haskell
    - text
    - time
    - transformers
    - vector
    - bcp47
  pkg-config-dependencies:
    - skia
  extra-libraries:
    - SkiaSharp
  when:
    - condition: flag(enable-skia-assertions)
      cpp-options: -DHS_SKIA_SKIA_ASSERTIONS_ENABLED

tests:
  skia-test:
    source-dirs: test/
    main: Spec.hs
    dependencies:
      - base
      - skia
      - tasty
      - tasty-hunit
      - tasty-quickcheck
      - linear
      - vector

executables:
  demo-raster-example:
    source-dirs: demos/
    main: RasterExample.hs
    other-modules: []
    dependencies:
      - base
      - skia
  demo-glfw-opengl:
    source-dirs: demos/
    main: GLFWOpenGL.hs
    other-modules: []
    dependencies:
      - base
      - GLFW-b
      - OpenGLRaw
      - skia
