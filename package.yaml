verbatim:
  cabal-version: ">=1.10"

name: skia
author: DSLstandard
maintainer: qgeneral35@gmail.com
version: 0.0.1
license-file: LICENSE
synopsis: Bindings to Google's Skia library through the C API of https://github.com/mono/skia

default-extensions:
  - AllowAmbiguousTypes
  - Arrows
  - BinaryLiterals
  - BlockArguments
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveAnyClass
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DerivingStrategies
  - DerivingVia
  - DuplicateRecordFields
  - EmptyCase
  - ExplicitForAll
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - ImportQualifiedPost
  - LambdaCase
  - LiberalTypeSynonyms
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - OverloadedLabels
  - OverloadedRecordDot
  - OverloadedStrings
  - PartialTypeSignatures
  - PatternSynonyms
  - QuasiQuotes
  - RankNTypes
  - RecordWildCards
  - RecursiveDo
  - ScopedTypeVariables
  - StandaloneDeriving
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeOperators
  - UndecidableInstances
  - ViewPatterns
ghc-options: -Wall -Wno-name-shadowing -Wno-orphans

# DEVELOPER NOTE: Link to a tutorial on using cabal flags to enable/disable
# assertions: https://guide.aelve.com/haskell/cpp-vww0qd72.html#item-oh9ytz0p
flags:
  enable-skia-assertions:
    description: >
      Enable Haskell IO assertions on the outputs of certain functions in the
      C++ Skia library. To elaborate, some Skia functions guarantee specific
      postconditions, and this Haskell binding library typically assumes that
      these postconditions are never violated and exploits this assumption to
      perform fast operations, which can fail spectacularly if the
      postconditions are in fact untrue. Enabling this flag adds simple
      assertion tests for the postconditions and raises a @SkiaAssertionError@
      if any violations are detected. These assertion tests should have very
      little runtime cost, thus it is recommended to leave this flag on.
    default: true
    manual: true
  use-skia-capi-shared-lib:
    description: >
      A flag for developers. Normal users may ignore this.
      When false (the default), @skia_capi@ is built as a static library and is
      linked statically to hs-skia.
      When true, @skia_capi@ is built as a shared library WITH ALL SKIA STATIC
      LIBRARIES LINKED. The @skia_capi@ shared library is then dynamically
      linked to hs-skia. The purpose of this is to enable running `cabal repl
      skia` for developing hs-skia, as `cabal repl` can only load C shared
      libraries.
    default: false
    manual: true

extra-source-files:
  - cbits/**
  - cbits_cmake/CMakeLists.txt

# build-type: Custom (hpack also sets it if the 'custom-setup' section is present)
custom-setup:
  dependencies:
    - base
    - Cabal >=1.4 && <2.1
    - directory <1.4
    - filepath <1.5
    - optics-core
    - optics-th

library:
  build-tools:
    - hsc2hs
  ghc-options:
    # See https://github.com/tfausak/imp?tab=readme-ov-file#recommended-usage
    -fplugin=Imp
    -fplugin-opt=Imp:--alias=_:ThisModule
  dependencies:
    - base
    - bcp47
    - bytestring
    - haskell-src-exts
    - haskell-src-meta
    - imp ^>= 1.0.0.0 # About 'imp', see https://taylor.fausak.me/2024/03/31/alias-current-module/
    - linear
    - neat-interpolation
    - resourcet
    - storable-offset
    - template-haskell
    - text
    - time
    - vector
    - managed
  source-dirs: src/
  pkg-config-dependencies:
    # The pkg-config pf 'skia' tells Cabal the library path of Skia and also has
    # the -lskia flag, but it does not link the other Skia libraries like
    # 'skottie', 'skparagraph', etc.
    - skia
  include-dirs:
    - cbits/
    - cbits/fake_headers
  when:
    - condition: flag(enable-skia-assertions)
      cpp-options: -DHS_SKIA_SKIA_ASSERTIONS_ENABLED
    
    - condition: "!flag(use-skia-capi-shared-lib)"
      extra-libraries:
        # Required for C++ code to avoid undefined reference errors
        - stdc++

        # Skia shared libraries to link.
        #
        # Built executables depending on hs-skia will automatically link to the necessary
        # Skia shared libraries listed here. See cbits_cmake/CMakeLists.txt to learn
        # what to link.
        - skia
        - skottie
        - skparagraph
        - sksg
        - skshaper
        - skunicode_core
        - skunicode_icu # TODO: Add other SkUnicode backends too, or create a package flag for each Skia SKUnicode backend.
        - svg

        - skia_capi_static

    - condition: flag(use-skia-capi-shared-lib)
      extra-libraries:
        # N.B. We don't need to list all the Skia libraries here because
        # skia_capi_shared already links to them. We will be linked to those
        # Skia shared libraries transitively.
        - skia_capi_shared

executables:
  demo-raster-example-bindings-only:
    source-dirs: demos/
    main: DemoRasterExampleBindingsOnly.hs
    other-modules: []
    dependencies:
      - base
      - skia

  demo-raster-example:
    source-dirs: demos/
    main: DemoRasterExample.hs
    other-modules: []
    dependencies:
      - base
      - linear
      - resourcet
      - skia

  demo-glfw-opengl:
    source-dirs: demos/
    main: DemoGLFWOpenGL.hs
    other-modules: []
    dependencies:
      - GLFW-b
      - OpenGLRaw
      - base
      - linear
      - resourcet
      - skia
      - text

  demo-sdl2-opengl:
    source-dirs: demos/
    main: DemoSDL2OpenGL.hs
    other-modules: []
    dependencies:
      - OpenGLRaw
      - base
      - linear
      - resourcet
      - sdl2
      - skia
      - text

  demo-skparagraph:
    source-dirs: demos/
    main: DemoSKParagraph.hs
    other-modules: [SharedUtils.MakeDemoApp]
    dependencies:
      - GLFW-b
      - OpenGLRaw
      - base
      - linear
      - neat-interpolation
      - resourcet
      - skia
      - text

  demo-list-skunicode-backends:
    source-dirs: demos/
    main: DemoListSKUnicodeBackends.hs
    other-modules: []
    dependencies:
      - base
      - resourcet
      - skia

  demo-skottie-animation-viewer:
    source-dirs: demos/
    main: DemoSkottieAnimationViewer.hs
    other-modules: [SharedUtils.MakeDemoApp]
    dependencies:
      - base
      - GLFW-b
      - OpenGLRaw
      - skia
      - time
      - optparse-applicative
      - linear
      - text
      - resourcet
      - directory