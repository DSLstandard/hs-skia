module Skia.Types.Objects where

import Skia.Bindings.Internal.AutoGenerated
import Skia.Types.Core
import Skia.Types.Internal.Utils.TH

-- Mono Skia's opaque structs
$(qGenerateSKObject "SKNvRefCnt" ''Sk_nvrefcnt)
$(qGenerateSKObject "SKRefCnt" ''Sk_refcnt)
$(qGenerateSKObject "SKFlattenable" ''Sk_flattenable)

-- This is replaced by 'data SurfaceProps':
-- \$(qGenerateSKObject "SKSurfaceProps" ''Sk_surfaceprops)

$(qGenerateSKObject "SKCanvas" ''Sk_canvas)
$(qGenerateSKObject "SKCanvasSaveLayerRec" ''Sk_canvas_savelayerrec)
$(qGenerateSKObject "SKNoDrawCanvas" ''Sk_nodraw_canvas)
$(qGenerateSKObject "SKNWayCanvas" ''Sk_nway_canvas)
$(qGenerateSKObject "SKOverdrawCanvas" ''Sk_overdraw_canvas)
$(qGenerateSKObject "SKData" ''Sk_data)
$(qGenerateSKObject "SKDrawable" ''Sk_drawable)
$(qGenerateSKObject "SKImage" ''Sk_image)
$(qGenerateSKObject "SKMaskFilter" ''Sk_maskfilter)
$(qGenerateSKObject "SKPaint" ''Sk_paint)
$(qGenerateSKObject "SKFont" ''Sk_font)
$(qGenerateSKObject "SKPath" ''Sk_path)
$(qGenerateSKObject "SKPicture" ''Sk_picture)
$(qGenerateSKObject "SKPictureRecorder" ''Sk_picture_recorder)
$(qGenerateSKObject "SKBBHFactory" ''Sk_bbh_factory)
$(qGenerateSKObject "SKRTreeFactory" ''Sk_rtree_factory)
$(qGenerateSKObject "SKShader" ''Sk_shader)
$(qGenerateSKObject "SKSurface" ''Sk_surface)
$(qGenerateSKObject "SKRegion" ''Sk_region)
$(qGenerateSKObject "SKRegionIterator" ''Sk_region_iterator)
$(qGenerateSKObject "SKRegionCliperator" ''Sk_region_cliperator)
$(qGenerateSKObject "SKRegionSpanerator" ''Sk_region_spanerator)
$(qGenerateSKObject "SKString" ''Sk_string)
$(qGenerateSKObject "SKBitmap" ''Sk_bitmap)
$(qGenerateSKObject "SKPixmap" ''Sk_pixmap)
$(qGenerateSKObject "SKColorFilter" ''Sk_colorfilter)
$(qGenerateSKObject "SKImageFilter" ''Sk_imagefilter)
$(qGenerateSKObject "SKBlender" ''Sk_blender)
$(qGenerateSKObject "SKTypeface" ''Sk_typeface)
$(qGenerateSKObject "SKFontManager" ''Sk_fontmgr)

-- This is replaced by 'data FontStyle':
-- \$(qGenerateSKObject "SKFontStyle" ''Sk_fontstyle)

$(qGenerateSKObject "SKFontStyleSet" ''Sk_fontstyleset)
$(qGenerateSKObject "SKCodec" ''Sk_codec)
$(qGenerateSKObject "SKColorSpace" ''Sk_colorspace)
$(qGenerateSKObject "SKStream" ''Sk_stream)
$(qGenerateSKObject "SKFileStream" ''Sk_stream_filestream)
$(qGenerateSKObject "SKAssetStream" ''Sk_stream_asset)
$(qGenerateSKObject "SKMemoryStream" ''Sk_stream_memorystream)
$(qGenerateSKObject "SKStreamRewindable" ''Sk_stream_streamrewindable)
$(qGenerateSKObject "SKWStream" ''Sk_wstream)
$(qGenerateSKObject "SKFileWStream" ''Sk_wstream_filestream)
$(qGenerateSKObject "SKDynamicMemoryWStream" ''Sk_wstream_dynamicmemorystream)
$(qGenerateSKObject "SKDocument" ''Sk_document)
$(qGenerateSKObject "SKPathIterator" ''Sk_path_iterator)
$(qGenerateSKObject "SKPathRawIterator" ''Sk_path_rawiterator)
$(qGenerateSKObject "SKPathEffect" ''Sk_path_effect)
$(qGenerateSKObject "SKPixelRefFactory" ''Sk_pixelref_factory)
$(qGenerateSKObject "GRBackendRenderTarget" ''Gr_backendrendertarget)
$(qGenerateSKObject "GRBackendTexture" ''Gr_backendtexture)
$(qGenerateSKObject "GRDirectContext" ''Gr_direct_context)
$(qGenerateSKObject "GRRecordingContext" ''Gr_recording_context)
$(qGenerateSKObject "GRGlInterface" ''Gr_glinterface)
$(qGenerateSKObject "VkInstance" ''Vk_instance)
$(qGenerateSKObject "GRVkInterface" ''Gr_vkinterface)
$(qGenerateSKObject "VkPhysicalDevice" ''Vk_physical_device)
$(qGenerateSKObject "VkPhysicalDeviceFeatures" ''Vk_physical_device_features)
$(qGenerateSKObject "VkPhysicalDeviceFeatures2" ''Vk_physical_device_features_2)
$(qGenerateSKObject "VkDevice" ''Vk_device)
$(qGenerateSKObject "VkQueue" ''Vk_queue)
$(qGenerateSKObject "GRVkExtensions" ''Gr_vk_extensions)
$(qGenerateSKObject "GRVkMemoryAllocator" ''Gr_vk_memory_allocator)
$(qGenerateSKObject "SKPathOpBuilder" ''Sk_opbuilder)
$(qGenerateSKObject "SKPathMeasure" ''Sk_pathmeasure)
$(qGenerateSKObject "SKSVGCanvas" ''Sk_svgcanvas)
$(qGenerateSKObject "SKVertices" ''Sk_vertices)
$(qGenerateSKObject "SKColorSpaceICCProfile" ''Sk_colorspace_icc_profile)
$(qGenerateSKObject "SKRoundRect" ''Sk_rrect)
$(qGenerateSKObject "SKTextBlob" ''Sk_textblob)
$(qGenerateSKObject "SKTextBlobBuilder" ''Sk_textblob_builder)
$(qGenerateSKObject "SKTraceMemoryDump" ''Sk_tracememorydump)
$(qGenerateSKObject "SKRuntimeEffect" ''Sk_runtimeeffect)
$(qGenerateSKObject "SkottieAnimation" ''Skottie_animation)
$(qGenerateSKObject "SkottieAnimationBuilder" ''Skottie_animation_builder)
$(qGenerateSKObject "SkottieResourceProvider" ''Skottie_resource_provider)
$(qGenerateSKObject "SkottiePropertyObserver" ''Skottie_property_observer)
$(qGenerateSKObject "SkottieLogger" ''Skottie_logger)
$(qGenerateSKObject "SkottieMarkerObserver" ''Skottie_marker_observer)
$(qGenerateSKObject "SKSGInvalidationController" ''Sksg_invalidation_controller)
$(qGenerateSKObject "SKResourcesImageAsset" ''Skresources_image_asset)
$(qGenerateSKObject "SKResourcesMultiFrameImageAsset" ''Skresources_multi_frame_image_asset)
$(qGenerateSKObject "SKResourcesExternalTrackAsset" ''Skresources_external_track_asset)
$(qGenerateSKObject "SKResourcesResourceProvider" ''Skresources_resource_provider)
$(qGenerateSKObject "D3DDXGIAdapter" ''D3d_dxgi_adapter)
$(qGenerateSKObject "D3DD12Device" ''D3d_d12_device)
$(qGenerateSKObject "D3DD12CommandQueue" ''D3d_d12_command_queue)
$(qGenerateSKObject "GRD3DMemoryAllocator" ''Gr_d3d_memory_allocator)
$(qGenerateSKObject "D3DD12Resource" ''D3d_d12_resource)
$(qGenerateSKObject "D3DAlloc" ''D3d_alloc)

-- Xamarin structs
$(qGenerateSKObject "SKManagedStream" ''Sk_stream_managedstream)
$(qGenerateSKObject "SKManagedWStream" ''Sk_wstream_managedstream)
$(qGenerateSKObject "SKManagedDrawable" ''Sk_manageddrawable)
$(qGenerateSKObject "SKManagedTraceMemoryDump" ''Sk_managedtracememorydump)

{-
Missing Skia classes in Mono Skia are added here to

Some classes in Google's Skia are not defined in Mono's Skia C API, but some of
these classes are in the middle of inheritance chains. We can build "fake"
SKObject to create a substitute for these missing classes.
-}

$(qGenerateFakeSKObject "SKStreamSeekable")
$(qGenerateFakeSKObject "SKStreamMemory")

{-
SKStream's hierarchy:

- SKStream (http://skia-doc.commondatastorage.googleapis.com/doxygen/doxygen/html/classSkStream.html)
  - SKStreamRewindable
    - SKStreamSeekable (This is absent from Mono Skia's C API)
      - SKStreamAsset
        - SKStreamMemory
          - SKMemoryStream
        - SKFileStream
- SKWStream (http://skia-doc.commondatastorage.googleapis.com/doxygen/doxygen/html/classSkWStream.html)
  - SKFileWStream
  - SKDynamicMemoryWStream
  - SKNullWStream (This is absent from Mono Skia's C API)

Also see: SkiaSharp's binding/SkiaSharp/SKStream.cs
-}

-- Streams
$(qClassExtends ''SKStream [])
$(qClassExtends ''SKStreamRewindable [''SKStream])
$(qClassExtends ''SKStreamSeekable [''SKStreamRewindable])
$(qClassExtends ''SKAssetStream [''SKStreamSeekable])
$(qClassExtends ''SKStreamMemory [''SKAssetStream])
$(qClassExtends ''SKMemoryStream [''SKStreamMemory])
$(qClassExtends ''SKFileStream [''SKAssetStream])

-- Writable streams
$(qClassExtends ''SKWStream [])
$(qClassExtends ''SKFileWStream [''SKWStream])
$(qClassExtends ''SKDynamicMemoryWStream [''SKWStream])

-- GR*Context
$(qClassExtends ''GRRecordingContext [])
$(qClassExtends ''GRDirectContext [''GRRecordingContext])

-- Canvas
$(qClassExtends ''SKCanvas [])
$(qClassExtends ''SKNoDrawCanvas [''SKCanvas])
$(qClassExtends ''SKNWayCanvas [''SKNoDrawCanvas])
$(qClassExtends ''SKOverdrawCanvas [''SKNWayCanvas])

-- Drawable
$(qClassExtends ''SKDrawable [])
$(qClassExtends ''SKManagedDrawable [''SKDrawable])

-- Trace memory dump
$(qClassExtends ''SKTraceMemoryDump [])
$(qClassExtends ''SKManagedTraceMemoryDump [''SKTraceMemoryDump])

-- BBH factory
$(qClassExtends ''SKBBHFactory [])
$(qClassExtends ''SKRTreeFactory [''SKBBHFactory])

-- Some fake and unusable Skia object types created for Haddock documentation purposes.

{- | NOTE: This is an unusable Skia object type created for Haddock
documentation purposes.

This class is the smart container for pixel memory, and is used with 'SKBitmap'.
This class can be shared/accessed between multiple threads.
-}
type SKPixelRef = ()
